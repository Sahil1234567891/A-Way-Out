#include <stdio.h>
#include <stdlib.h>

// Define the structure for a binary tree node
typedef struct TreeNode {
    int value;
    struct TreeNode* left;
    struct TreeNode* right;
} TreeNode;

// Function to create a new binary tree node
TreeNode* createNode(int value) {
    TreeNode* newNode = (TreeNode*)malloc(sizeof(TreeNode));
    if (newNode == NULL) {
        printf("Memory allocation failed.\n");
        exit(1);
    }
    newNode->value = value;
    newNode->left = newNode->right = NULL;
    return newNode;
}

// Function to build a binary tree representing the game map
TreeNode* buildGameMap() {
    TreeNode* root = createNode(0);
    root->left = createNode(1);
    root->right = createNode(2);
    root->left->left = createNode(3);
    root->left->right = createNode(4);
    root->right->left = createNode(5);
    root->right->right = createNode(6);
    root->left->left->left = createNode(7);
    root->left->left->right = createNode(8);
    root->left->right->left = createNode(9);
    root->left->right->right = createNode(10);
    root->right->left->left = createNode(11);
    root->right->left->right = createNode(12);
    root->right->right->left = createNode(13);
    root->right->right->right = createNode(14);
    return root;
}

// Function to play the game and find the winning path
int playGame(TreeNode* currentNode) {
    printf("Current position: %d\n", currentNode->value);

    if (currentNode->value == 14) {
        printf("Congratulations! You've reached the win condition.\n");
        return 1; // You won!
    }

    char choice;
    printf("Choose the next move (L for left, R for right): ");
    scanf(" %c", &choice);

    if (choice == 'L' || choice == 'l') {
        if (currentNode->left != NULL) {
            return playGame(currentNode->left);
        }
    } else if (choice == 'R' || choice == 'r') {
        if (currentNode->right != NULL) {
            return playGame(currentNode->right);
        }
    }

    printf("Invalid move. Try again.\n");
    return 0;
}

int main() {
    TreeNode* root = buildGameMap();
    printf("Welcome to the game!\n");
    int result = playGame(root);
    if (result == 0) {
        printf("Game over. You didn't find the winning path.\n");
    }
    return 0;
}
