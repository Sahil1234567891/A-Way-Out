#include<stdio.h>
#include<stdlib.h>

typedef struct map {
    char *clue;
    struct map* left;
    struct map* right;
} map;

map *add(char *clue) {
    map* branch = (map*)malloc(sizeof(map));
    if (branch == NULL) {
        printf("fail\n");
        exit(1);
    }
    branch->clue = clue;
    branch->left = branch->right = NULL;
    return branch;
}

map *construct(){
    map* player = add("1:there are two routs in front of you,you see light coming from left and hear some voice from right");
    player->left = add("2:");
    player->right = add("3:hi");
    player->left->left = add("4:hi");
    player->left->right = add("5:hi");
    player->right->left = add("6:hi");
    player->right->right = add("7:hi");
    player->left->left->left = add("8:hi");
    player->left->left->right = add("9:hi");
    player->left->right->left = add("10:hi");
    player->left->right->right = add("11:hi");
    player->right->left->left = add("12:hi");
    player->right->left->right = add("13:hi");
    player->right->right->left = add("14:hi");
    player->right->right->right = add("15:hi");
    player->left->left->left->left = add("16:hi");
    player->left->left->left->right = add("17:hi");
    player->left->left->right->left = add("18:hi");
    player->left->left->right->right = add("19:hi");
    player->left->right->left->left = add("20:hi");
    player->left->right->left->right = add("21:hi");
    player->left->right->right->left = add("22:hi");
    player->left->right->right->right = add("23:hi");
    player->right->left->left->left = add("24:hi");
    player->right->left->left->right = add("25:hi");
    player->right->left->right->left = add("26:hi");
    player->right->left->right->right = add("27:hi");
    player->right->right->left->left = add("28:hi");
    player->right->right->left->right = add("29:hi");
    player->right->right->right->left = add("30:hi");
    player->right->right->right->right = add("31:hi");
    player->left->left->left->left->left = add("32:hi");
    player->left->left->left->left->right = add("33:hi");
    player->left->left->left->right->left = add("34:hi");
    player->left->left->left->right->right = add("35:hi");
    player->left->left->right->left->left = add("36:hi");
    player->left->left->right->left->right = add("37:hi");
    player->left->left->right->right->left = add("38:hi");
    player->left->left->right->right->right = add("39:hi");
    player->left->right->left->left->left = add("40:hi");
    player->left->right->left->left->right = add("41:hi");
    player->left->right->left->right->left = add("42:hi");
    player->left->right->left->right->right = add("43:hi");
    player->left->right->right->left->left = add("44:hi");
    player->left->right->right->left->right = add("45:hi");
    player->left->right->right->right->left = add("46:hi");
    player->left->right->right->right->right = add("47:hi");
    player->right->left->left->left->left = add("48:hi");
    player->right->left->left->left->right = add("49:hi");
    player->right->left->left->right->left = add("50:hi");
    player->right->left->left->right->right = add("51:hi");
    player->right->left->right->left->left = add("52:hi");
    player->right->left->right->left->right = add("53:hi");
    player->right->left->right->right->left = add("54:hi");
    player->right->left->right->right->right = add("55:hi");
    player->right->right->left->left->left = add("56:hi");
    player->right->right->left->left->right = add("57:hi");
    player->right->right->left->right->left = add("58:hi");
    player->right->right->left->right->right = add("59:hi");
    player->right->right->right->left->left = add("60:hi");
    player->right->right->right->left->right = add("61:hi");
    player->right->right->right->right->left = add("62:hi");
    player->right->right->right->right->right = add("63:hi");
    player->left->left->left->left->left->left = add("64:hi");
    player->left->left->left->left->left->right = add("65:hi");
    player->left->left->left->left->right->left = add("66:hi");
    player->left->left->left->left->right->right = add("67:hi");
    player->left->left->left->right->left->left = add("68:hi");
    player->left->left->left->right->left->right = add("69:hi");
    player->left->left->left->right->right->left = add("70:hi");
    player->left->left->left->right->right->right = add("71:hi");
    player->left->left->right->left->left->left = add("72:hi");
    player->left->left->right->left->left->right = add("73:hi");
    player->left->left->right->left->right->left = add("74:hi");
    player->left->left->right->left->right->right = add("75:hi");
    player->left->left->right->right->left->left = add("76:hi");
    player->left->left->right->right->left->right = add("77:hi");
    player->left->left->right->right->right->left = add("78:hi");
    player->left->left->right->right->right->right = add("79:hi");
    player->left->right->left->left->left->left = add("80:hi");
    player->left->right->left->left->left->right = add("81:hi");
    player->left->right->left->left->right->left = add("82:hi");
    player->left->right->left->left->right->right = add("83:hi");
    player->left->right->left->right->left->left = add("84:hi");
    player->left->right->left->right->left->right = add("85:hi");
    player->left->right->left->right->right->left = add("86:hi");
    player->left->right->left->right->right->right = add("87:hi");
    player->left->right->right->left->left->left = add("88:hi");
    player->left->right->right->left->left->right = add("89:hi");
    player->left->right->right->left->right->left = add("90:hi");
    player->left->right->right->left->right->right = add("91:hi");
    player->left->right->right->right->left->left = add("92:hi");
    player->left->right->right->right->left->right = add("93:hi");
    player->left->right->right->right->right->left = add("94:hi");
    player->left->right->right->right->right->right = add("95:hi");
    player->right->left->left->left->left->left = add("96:hi");
    player->right->left->left->left->left->right = add("97:hi");
    player->right->left->left->left->right->left = add("98:hi");
    player->right->left->left->left->right->right = add("99:hi");
    player->right->left->left->right->left->left = add("100:hi");
    player->right->left->left->right->left->right = add("101:hi");
    player->right->left->left->right->right->left = add("102:hi");
    player->right->left->left->right->right->right = add("103:hi");
    player->right->left->right->left->left->left = add("104:hi");
    player->right->left->right->left->left->right = add("105:hi");
    player->right->left->right->left->right->left = add("106:hi");
    player->right->left->right->left->right->right = add("107:hi");
    player->right->left->right->right->left->left = add("108:hi");
    player->right->left->right->right->left->right = add("109:hi");
    player->right->left->right->right->right->left = add("110:hi");
    player->right->left->right->right->right->right = add("111:hi");
    player->right->right->left->left->left->left = add("112:hi");
    player->right->right->left->left->left->right = add("113:hi");
    player->right->right->left->left->right->left = add("114:hi");
    player->right->right->left->left->right->right = add("115:hi");
    player->right->right->left->right->left->left = add("116:hi");
    player->right->right->left->right->left->right = add("117:hi");
    player->right->right->left->right->right->left = add("118:hi");
    player->right->right->left->right->right->right = add("119:hi");
    player->right->right->right->left->left->left = add("120:hi");
    player->right->right->right->left->left->right = add("121:hi");
    player->right->right->right->left->right->left = add("122:hi");
    player->right->right->right->left->right->right = add("123:hi");
    player->right->right->right->right->left->left = add("124:hi");
    player->right->right->right->right->left->right = add("125:hi");
    player->right->right->right->right->right->left = add("126:hi");
    player->right->right->right->right->right->right = add("127:hi");
    return player;
}

void goleft(int back,map* player){
    if (player->left != NULL) {
        playmove(back,player->left);
    }
}
void goright(int back,map* player){
    if (player->right != NULL) {
        playmove(back,player->right);
    }
}
void goback(map* player,int back){
    if (back<20){
        back++;

    }
    else
        printf("you have used up all you back moves recklessly!! NOW SUFFEER(either continue or replayer)" );
}

void playmove(int back,map *player){
    char move;
    printf("enter your move: ");
    while (getchar() != '\n');
    scanf("%c", &move);

    if (player != NULL) {
        printf("%s\n", player->clue);
    }
    if(player->left==NULL && move!='s' && move!='r'){
        printf("You've reached the end of map GO BACK or RESTART");
        playmove(back,player);
    }
    if (move=='a'){
        goleft(back,player);
    }
    if (move=='d'){
        goright(back,player);
    }
    if (move=='s'){
        goback(player,back);
    }
    if (move=='r'){
        map *player=construct();
        back=0;
        playmove(back,player);
    }
}
void script(){
    printf("\n\n*You wake up in an unfamiliar and unsettling environment, disoriented and alarmed.* \n\nYou:(panicked) What's going on? Who are you, and where am I? \n\n???: (chuckles) You won't get any answers from me, my dear subject. But don't worry, you'll have the opportunity to experience my groundbreaking experiments firsthand. \n\nYou: (desperate) This can't be happening! Let me out of here, please! I haven't done anything to deserve this!\n\n*You desperately look around, trying to find any possible means of escape.* \n\nYou: (determined) I won't let you do this to me! There has to be a way out of here!\n\n???: (mocking) Determination, I see. Very well, you can try to find a way out. But be warned, my dear subject, you're not alone in this maze.\n\n*As you player exploring your surroundings, you notice a door in the far corner of the room.*\n\nYou: (whispering to yourself) Maybe that door leads to my escape.\n\n*You cautiously approach the door, and to your surprise, it creaks open. Stepping through, you find yourself in a dimly lit corridor. The walls are covered in strange symbols, and you can hear faint, eerie noises in the distance.*\n\nYou: (whispering) What is this place?\n\n*You continue down the corridor, and it eventually leads to a junction. To your left, there's another door, while to your right, you see a long, twisting corridor.*\n\nYou: (thinking) Which way should I go?\n\n*Not knowing what awaits you, you decide to go through the door to your left. As you open it, you find yourself in a small, circular room with multiple doors, each labeled with different symbols.*\n\nYou: (confused) Now what? Which door should I choose?");
    printf("\n\n\n\n\nGame Rules:\n 1) you can only go left or right\n 2) you are allowed to move backwards only 20 times\n 3) you must find a way out of this maze,\n\n");
}
char getname(){
    char name[100];
    printf("enter your name\n");
    scanf("%s",name);
    return name;
}

int main(){
    int back=0;
    char name;
    name=getname();
    map *player= construct();
    script();
    playmove(back,player);

}
